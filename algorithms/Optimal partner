## We choose a cheater and run the OP algorithm to find her optimal partner ###

def optimal_partner(pref_m,pref_w,w_cheater):
    n = len(pref_m[0])
    final_matching = [-1]*n
    already_asked  = [-1]*n
    those_who_asked = []
    while (-1) in final_matching: 
        m = find_pair(final_matching,-1)
        w = pref_m[m][already_asked[m]+1]
        already_asked[m] +=1
        if final_matching.count(-1)==1 and w == w_cheater:
            those_who_asked.append(m)
            break
        else:
            if w != w_cheater:
                if w in final_matching:
                    m2 = find_pair(final_matching,w)
                    rank1 = find_pair(pref_w[w],m)
                    rank2 = find_pair(pref_w[w],m2)
                    if rank1 < rank2:
                        final_matching[m]=w
                        final_matching[m2]=-1
                else:
                    final_matching[m]=w
            else:
                those_who_asked.append(m)
    for j in pref_w[w_cheater]:
        if j in those_who_asked:
            return j,those_who_asked
